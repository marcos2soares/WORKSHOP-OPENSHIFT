apiVersion: v1
kind: Service
metadata:
  name: grafana-svc
  labels:
    app: app-grafana
    tier: grafana
spec:
  ports:
  - name: "grafana-ports"
    port: 3000
  selector:
    app: app-grafana
    tier: grafana
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pv-claim
  labels:
    app: app-grafana
    tier: grafana
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 3Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-deploy
  labels:
    app: app-grafana
    tier: grafana
    app.kubernetes.io/part-of: grafana
spec:
  selector:
    matchLabels:
      app: app-grafana
      tier: grafana
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: app-grafana
        tier: grafana
    spec:
      containers:
      - image: image-registry.openshift-image-registry.svc:5000/vt121170prj/grafana
        name: grafana
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: admin
        - name: GF_SECURITY_ADMIN_USER
          value: admin
        ports:
        - containerPort: 3000
        volumeMounts:
        - name: grafana-data
          mountPath: /var/lib/grafana
      volumes:
      - name: grafana-data
        persistentVolumeClaim:
          claimName: grafana-pv-claim
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  labels:
    app: app-grafana
    tier: grafana
  name: grafana
spec:
  tags:
  - name: latest
    from:
      kind: DockerImage
      name: docker.io/grafana/grafana
    importPolicy:
      scheduled: false
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: grafana-route
  labels:
    app: app-grafana
    tier: grafana
spec:
  host: grafana-vt121170prj.apps.ocplab.vtal.intra
  port:
    targetPort: grafana-ports
  to:
    kind: Service
    name: grafana-svc
    weight: 100
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
  wildcardPolicy: None
